<?php
/**
 * ShipmentUpdateDataAttributes
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Commerce Layer API
 *
 * Headless Commerce for Global Brands.
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: support@commercelayer.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ShipmentUpdateDataAttributes Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ShipmentUpdateDataAttributes implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'shipmentUpdate_data_attributes';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        '_on_hold' => 'bool',
        '_picking' => 'bool',
        '_packing' => 'bool',
        '_ready_to_ship' => 'bool',
        '_ship' => 'bool',
        '_get_rates' => 'bool',
        'selected_rate_id' => 'string',
        '_purchase' => 'bool',
        'reference' => 'string',
        'reference_origin' => 'string',
        'metadata' => 'object'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        '_on_hold' => null,
        '_picking' => null,
        '_packing' => null,
        '_ready_to_ship' => null,
        '_ship' => null,
        '_get_rates' => null,
        'selected_rate_id' => null,
        '_purchase' => null,
        'reference' => null,
        'reference_origin' => null,
        'metadata' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        '_on_hold' => '_on_hold',
        '_picking' => '_picking',
        '_packing' => '_packing',
        '_ready_to_ship' => '_ready_to_ship',
        '_ship' => '_ship',
        '_get_rates' => '_get_rates',
        'selected_rate_id' => 'selected_rate_id',
        '_purchase' => '_purchase',
        'reference' => 'reference',
        'reference_origin' => 'reference_origin',
        'metadata' => 'metadata'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        '_on_hold' => 'setOnHold',
        '_picking' => 'setPicking',
        '_packing' => 'setPacking',
        '_ready_to_ship' => 'setReadyToShip',
        '_ship' => 'setShip',
        '_get_rates' => 'setGetRates',
        'selected_rate_id' => 'setSelectedRateId',
        '_purchase' => 'setPurchase',
        'reference' => 'setReference',
        'reference_origin' => 'setReferenceOrigin',
        'metadata' => 'setMetadata'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        '_on_hold' => 'getOnHold',
        '_picking' => 'getPicking',
        '_packing' => 'getPacking',
        '_ready_to_ship' => 'getReadyToShip',
        '_ship' => 'getShip',
        '_get_rates' => 'getGetRates',
        'selected_rate_id' => 'getSelectedRateId',
        '_purchase' => 'getPurchase',
        'reference' => 'getReference',
        'reference_origin' => 'getReferenceOrigin',
        'metadata' => 'getMetadata'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['_on_hold'] = $data['_on_hold'] ?? null;
        $this->container['_picking'] = $data['_picking'] ?? null;
        $this->container['_packing'] = $data['_packing'] ?? null;
        $this->container['_ready_to_ship'] = $data['_ready_to_ship'] ?? null;
        $this->container['_ship'] = $data['_ship'] ?? null;
        $this->container['_get_rates'] = $data['_get_rates'] ?? null;
        $this->container['selected_rate_id'] = $data['selected_rate_id'] ?? null;
        $this->container['_purchase'] = $data['_purchase'] ?? null;
        $this->container['reference'] = $data['reference'] ?? null;
        $this->container['reference_origin'] = $data['reference_origin'] ?? null;
        $this->container['metadata'] = $data['metadata'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets _on_hold
     *
     * @return bool|null
     */
    public function getOnHold()
    {
        return $this->container['_on_hold'];
    }

    /**
     * Sets _on_hold
     *
     * @param bool|null $_on_hold Send this attribute if you want to put this shipment on hold.
     *
     * @return self
     */
    public function setOnHold($_on_hold)
    {
        $this->container['_on_hold'] = $_on_hold;

        return $this;
    }

    /**
     * Gets _picking
     *
     * @return bool|null
     */
    public function getPicking()
    {
        return $this->container['_picking'];
    }

    /**
     * Sets _picking
     *
     * @param bool|null $_picking Send this attribute if you want to start picking this shipment.
     *
     * @return self
     */
    public function setPicking($_picking)
    {
        $this->container['_picking'] = $_picking;

        return $this;
    }

    /**
     * Gets _packing
     *
     * @return bool|null
     */
    public function getPacking()
    {
        return $this->container['_packing'];
    }

    /**
     * Sets _packing
     *
     * @param bool|null $_packing Send this attribute if you want to start packing this shipment.
     *
     * @return self
     */
    public function setPacking($_packing)
    {
        $this->container['_packing'] = $_packing;

        return $this;
    }

    /**
     * Gets _ready_to_ship
     *
     * @return bool|null
     */
    public function getReadyToShip()
    {
        return $this->container['_ready_to_ship'];
    }

    /**
     * Sets _ready_to_ship
     *
     * @param bool|null $_ready_to_ship Send this attribute if you want to mark this shipment as ready to ship.
     *
     * @return self
     */
    public function setReadyToShip($_ready_to_ship)
    {
        $this->container['_ready_to_ship'] = $_ready_to_ship;

        return $this;
    }

    /**
     * Gets _ship
     *
     * @return bool|null
     */
    public function getShip()
    {
        return $this->container['_ship'];
    }

    /**
     * Sets _ship
     *
     * @param bool|null $_ship Send this attribute if you want to mark this shipment as shipped.
     *
     * @return self
     */
    public function setShip($_ship)
    {
        $this->container['_ship'] = $_ship;

        return $this;
    }

    /**
     * Gets _get_rates
     *
     * @return bool|null
     */
    public function getGetRates()
    {
        return $this->container['_get_rates'];
    }

    /**
     * Sets _get_rates
     *
     * @param bool|null $_get_rates Send this attribute if you want get the shipping rates from the associated carrier accounts.
     *
     * @return self
     */
    public function setGetRates($_get_rates)
    {
        $this->container['_get_rates'] = $_get_rates;

        return $this;
    }

    /**
     * Gets selected_rate_id
     *
     * @return string|null
     */
    public function getSelectedRateId()
    {
        return $this->container['selected_rate_id'];
    }

    /**
     * Sets selected_rate_id
     *
     * @param string|null $selected_rate_id The selected purchase rate from the available shipping rates.
     *
     * @return self
     */
    public function setSelectedRateId($selected_rate_id)
    {
        $this->container['selected_rate_id'] = $selected_rate_id;

        return $this;
    }

    /**
     * Gets _purchase
     *
     * @return bool|null
     */
    public function getPurchase()
    {
        return $this->container['_purchase'];
    }

    /**
     * Sets _purchase
     *
     * @param bool|null $_purchase Send this attribute if you want to purchase this shipment with the selected rate.
     *
     * @return self
     */
    public function setPurchase($_purchase)
    {
        $this->container['_purchase'] = $_purchase;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string|null
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string|null $reference A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
     *
     * @return self
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets reference_origin
     *
     * @return string|null
     */
    public function getReferenceOrigin()
    {
        return $this->container['reference_origin'];
    }

    /**
     * Sets reference_origin
     *
     * @param string|null $reference_origin Any identifier of the third party system that defines the reference code
     *
     * @return self
     */
    public function setReferenceOrigin($reference_origin)
    {
        $this->container['reference_origin'] = $reference_origin;

        return $this;
    }

    /**
     * Gets metadata
     *
     * @return object|null
     */
    public function getMetadata()
    {
        return $this->container['metadata'];
    }

    /**
     * Sets metadata
     *
     * @param object|null $metadata Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
     *
     * @return self
     */
    public function setMetadata($metadata)
    {
        $this->container['metadata'] = $metadata;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


